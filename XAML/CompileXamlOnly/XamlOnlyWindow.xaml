<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:CompileXamlOnly"
        x:Class="CompileXamlOnly.XamlOnlyWindow"
        Title="Compile XAML Only" SizeToContent="WidthAndHeight" ResizeMode="CanMinimize" 
        Loaded="WindowOnLoaded">
    <StackPanel>
        <!--无样式的-->
        <!--<local:BooksButton Width="100" Height="100" HorizontalAlignment="Center" Margin="24" Click="ButtonOnClick"/>-->

        <Button Width="100" Height="100" HorizontalAlignment="Center" Margin="24" Click="ButtonOnClick">
            <StackPanel>
                <Polyline Stroke="Black" Points="0 10, 10 0, 20 10, 30 0, 40 10, 50 0, 60 10, 70 0, 80 10, 90 0, 100 10"/>

                <Image Margin="0, 10, 0, 0" Source="pack://application:,,/Images/book.png" Stretch="None"/>

                <Label HorizontalAlignment="Center">
                    _Read Books!
                </Label>

                <Polyline Stroke="Black" Points="0 0, 10 10, 20 0, 30 10, 40 0, 50 10, 60 0, 70 10, 80 0, 90 10, 100 0"/>
            </StackPanel>
        </Button>


        <Ellipse Name="elips" Width="200" Height="100" Margin="24" Stroke="Red" StrokeThickness="10"/>

        <ListBox Name="lstbox" Width="100" Height="100" Margin="24" SelectionChanged="ListBoxOnSelectionChanged">
            <ListBoxItem>Sunday</ListBoxItem>
            <ListBoxItem>Monday</ListBoxItem>
            <ListBoxItem>Tuesday</ListBoxItem>
            <ListBoxItem>Wednesday</ListBoxItem>
            <ListBoxItem>Thursday</ListBoxItem>
            <ListBoxItem>Friday</ListBoxItem>
            <ListBoxItem>Staurday</ListBoxItem>
        </ListBox>

        <x:Code>
            <!--CDATA 意思为character data 字符数据-->
            <!--在CDATA内部不能出现“]]>”即 写出类似 if (array1[array2[i]] > 5)这样的语句，中间要插入空格，才不会被误判 -->
            <![CDATA[
            void WindowOnLoaded(object sender, RoutedEventArgs args)
            {
                lstbox.Items.Clear();
                foreach(System.Reflection.PropertyInfo prop in typeof(Brushes).GetProperties())
                    lstbox.Items.Add(prop.Name);
            }
            
            void ButtonOnClick(object sender, RoutedEventArgs args)
            {
                Button btn = sender as Button;
                MessageBox.Show($"The button labled '{btn.Content}' has been clicked.");
            }
                
            void ListBoxOnSelectionChanged(object sender, SelectionChangedEventArgs args)
            {
                string strItem = lstbox.SelectedItem as string;
                System.Reflection.PropertyInfo prop = typeof(Brushes).GetProperty(strItem);
                elips.Fill = (Brush)prop.GetValue(null, null);
            }
                            
            ]]>
        </x:Code>
    </StackPanel>
</Window>
